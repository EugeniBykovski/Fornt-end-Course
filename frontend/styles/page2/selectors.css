/* 
  * Selectors
  Селектор - это синтаксис, который помогает выбрать элемент в html разметке и добавить ему необходимые стили

  * Делятся на:
    1. простые (simple selectors) - состоят из одной синтаксической единицы
    2. составные (composite selectors) - могут включать несколько
*/

/* 
  1. * {..} - универсальный селектор. Применяете стили ко ВСЕМ элементам, которые находятся на странице

  2. По имени тега - p, h1, div и т.д.
    - нужно делать очень аккуратно, так как можно добавить стили туда, где они не нужны

  3. По классу (.class)
    - перед именем ставим точку и далее записываем имя класса. Далее в фигурных скобках указываем все необходимые свойства. 
    - по этому принципу работет Bootstrap (в нем есть набор определенных классов и html структур, в которые добавляете нужные вам классы и фреймворк все делает за вас)
    - классы можно комбинировать, а это значит, что одному элементу может быть задано несколько классов

  4. По ID (#id)
    - id на странице должен быть уникальным
    - используется, если на элемент нужно добавить какую-то логику
*/

* {
  color: #f85896;
}

p {
  color: greenyellow;
}

h1 {
  color: blueviolet;
}

.heading1 {
  text-decoration: underline;
}

.heading2 {
  text-transform: uppercase;
}

.fz20 {
  font-size: 20px;
}

#heading3,
#heading4 {
  font-size: 40px;
  border: 1px solid #f85896;
}

/* 
  ! Специфичность селекторов:
  - определяется по весу стиля (1000 / 100 / 10 / 1)
  * inline style: 1000
  * ID: 100
  * class / attribute / pseudo-class: 10
  * element / pseudo-element: 1
*/

q {
  /* сейчас вес селектора равен 1 */
  color: brown;
}

.simple {
  /* сейчас вес селектора становится 10 */
  color: #f85896; 
}

q.simple {
  /* проверит все теги "q", у которых есть класс .simple */
  color: #898989; 
}

body q.simple {
  /* 1 + 1 + 10 = 12 -> это уже составной селектор */
  color: darkcyan;
}

/* 
  ! Составные селекторы:
  - это комбинация селекторов, которая образует новый, более конкретный селектор

  * 1. Групповые селекторы - идет перечисление через запятую элементов, которым мы бы хотели применить стили

  * 2. Селектор потомок (контекстный селектор) - когда определенный эл-т является потомком другого эл-та
    - стили будут применены к последнему тегу этой цепочки

    - div - родитель 1го параграфа
    - p - его потомок

    <div>
      <p>Par 1</p>
    </div>
    <p>Par 2</p>

  * 3. Селектор прямого потомка
    * если мы хотим точно указать, что стилизируемый эл-т должен быть потомком другого без каких-то доп-ных вложений, то между тегом родителя и потомка ставится знак > (например, текст внутри тега span является прямым потомком тега li)
      - если убрать >, то оба эл-та span станут жирными

  * 4. Соседний селектор (следующий потомок) - поможет выбрать эл-т, следующий сразу за указанным эл-том
    * используется знак +
    - применится ко всем последующим элементам, идущим за выбранным
    <li>Li 2</li>
    <li>Li 3</li>

  * 5. Селектор атрибута 
    * используются [...] скобки
    * href^="..." - стиль применится ко всем эл-там, у кого путь начинается с данной строки
    * href$="..." - строка будет проверяться с конца
    * href*="..." - строка будет проверяться на наличие указанных символов

    !important -> inline style -> #id -> .class -> element
*/

/* 1 */
h4, 
h5, 
span {
  font-weight: 300;
}

/* 2 */
div p {
  color: #f85896;
}

div p span {
  color: #898989;
}

/* 3 */
ul li > span {
  font-weight: bold;
}

/* 4 */
ul li + li {
  color: aqua;
}

/* 5 */
a[target] {
  background-color: yellow;
}

a[target="_blank"] {
  background-color: #f85896;
}

a[href^="https://"] {
  background-color: coral !important; 
}

a[href$=".by"] {
  background-color: coral;
}

a[href*="host"] {
  background-color: coral;
}